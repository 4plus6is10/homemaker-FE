{"ast":null,"code":"/**\r\n * Copyright (c) 2013-present, Facebook, Inc.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree. An additional grant\r\n * of patent rights can be found in the PATENTS file in the same directory.\r\n *\r\n * @providesModule DraftEditorDragHandler\r\n * @format\r\n * \r\n */\n'use strict';\n\nvar DataTransfer = require('fbjs/lib/DataTransfer');\n\nvar DraftModifier = require('./DraftModifier');\n\nvar EditorState = require('./EditorState');\n\nvar findAncestorOffsetKey = require('./findAncestorOffsetKey');\n\nvar getTextContentFromFiles = require('./getTextContentFromFiles');\n\nvar getUpdatedSelectionState = require('./getUpdatedSelectionState');\n\nvar isEventHandled = require('./isEventHandled');\n\nvar nullthrows = require('fbjs/lib/nullthrows');\n/**\r\n * Get a SelectionState for the supplied mouse event.\r\n */\n\n\nfunction getSelectionForEvent(event, editorState) {\n  var node = null;\n  var offset = null;\n\n  if (typeof document.caretRangeFromPoint === 'function') {\n    var dropRange = document.caretRangeFromPoint(event.x, event.y);\n    node = dropRange.startContainer;\n    offset = dropRange.startOffset;\n  } else if (event.rangeParent) {\n    node = event.rangeParent;\n    offset = event.rangeOffset;\n  } else {\n    return null;\n  }\n\n  node = nullthrows(node);\n  offset = nullthrows(offset);\n  var offsetKey = nullthrows(findAncestorOffsetKey(node));\n  return getUpdatedSelectionState(editorState, offsetKey, offset, offsetKey, offset);\n}\n\nvar DraftEditorDragHandler = {\n  /**\r\n   * Drag originating from input terminated.\r\n   */\n  onDragEnd: function onDragEnd(editor) {\n    editor.exitCurrentMode();\n  },\n\n  /**\r\n   * Handle data being dropped.\r\n   */\n  onDrop: function onDrop(editor, e) {\n    var data = new DataTransfer(e.nativeEvent.dataTransfer);\n    var editorState = editor._latestEditorState;\n    var dropSelection = getSelectionForEvent(e.nativeEvent, editorState);\n    e.preventDefault();\n    editor.exitCurrentMode();\n\n    if (dropSelection == null) {\n      return;\n    }\n\n    var files = data.getFiles();\n\n    if (files.length > 0) {\n      if (editor.props.handleDroppedFiles && isEventHandled(editor.props.handleDroppedFiles(dropSelection, files))) {\n        return;\n      }\n\n      getTextContentFromFiles(files, function (fileText) {\n        fileText && editor.update(insertTextAtSelection(editorState, dropSelection, fileText));\n      });\n      return;\n    }\n\n    var dragType = editor._internalDrag ? 'internal' : 'external';\n\n    if (editor.props.handleDrop && isEventHandled(editor.props.handleDrop(dropSelection, data, dragType))) {\n      return;\n    }\n\n    if (editor._internalDrag) {\n      editor.update(moveText(editorState, dropSelection));\n      return;\n    }\n\n    editor.update(insertTextAtSelection(editorState, dropSelection, data.getText()));\n  }\n};\n\nfunction moveText(editorState, targetSelection) {\n  var newContentState = DraftModifier.moveText(editorState.getCurrentContent(), editorState.getSelection(), targetSelection);\n  return EditorState.push(editorState, newContentState, 'insert-fragment');\n}\n/**\r\n * Insert text at a specified selection.\r\n */\n\n\nfunction insertTextAtSelection(editorState, selection, text) {\n  var newContentState = DraftModifier.insertText(editorState.getCurrentContent(), selection, text, editorState.getCurrentInlineStyle());\n  return EditorState.push(editorState, newContentState, 'insert-fragment');\n}\n\nmodule.exports = DraftEditorDragHandler;","map":{"version":3,"names":["DataTransfer","require","DraftModifier","EditorState","findAncestorOffsetKey","getTextContentFromFiles","getUpdatedSelectionState","isEventHandled","nullthrows","getSelectionForEvent","event","editorState","node","offset","document","caretRangeFromPoint","dropRange","x","y","startContainer","startOffset","rangeParent","rangeOffset","offsetKey","DraftEditorDragHandler","onDragEnd","editor","exitCurrentMode","onDrop","e","data","nativeEvent","dataTransfer","_latestEditorState","dropSelection","preventDefault","files","getFiles","length","props","handleDroppedFiles","fileText","update","insertTextAtSelection","dragType","_internalDrag","handleDrop","moveText","getText","targetSelection","newContentState","getCurrentContent","getSelection","push","selection","text","insertText","getCurrentInlineStyle","module","exports"],"sources":["C:/20220103_lab/15.final_project/Front/homemaker-FE/node_modules/draft-js/lib/DraftEditorDragHandler.js"],"sourcesContent":["/**\r\n * Copyright (c) 2013-present, Facebook, Inc.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree. An additional grant\r\n * of patent rights can be found in the PATENTS file in the same directory.\r\n *\r\n * @providesModule DraftEditorDragHandler\r\n * @format\r\n * \r\n */\r\n\r\n'use strict';\r\n\r\nvar DataTransfer = require('fbjs/lib/DataTransfer');\r\nvar DraftModifier = require('./DraftModifier');\r\nvar EditorState = require('./EditorState');\r\n\r\nvar findAncestorOffsetKey = require('./findAncestorOffsetKey');\r\nvar getTextContentFromFiles = require('./getTextContentFromFiles');\r\nvar getUpdatedSelectionState = require('./getUpdatedSelectionState');\r\nvar isEventHandled = require('./isEventHandled');\r\nvar nullthrows = require('fbjs/lib/nullthrows');\r\n\r\n/**\r\n * Get a SelectionState for the supplied mouse event.\r\n */\r\nfunction getSelectionForEvent(event, editorState) {\r\n  var node = null;\r\n  var offset = null;\r\n\r\n  if (typeof document.caretRangeFromPoint === 'function') {\r\n    var dropRange = document.caretRangeFromPoint(event.x, event.y);\r\n    node = dropRange.startContainer;\r\n    offset = dropRange.startOffset;\r\n  } else if (event.rangeParent) {\r\n    node = event.rangeParent;\r\n    offset = event.rangeOffset;\r\n  } else {\r\n    return null;\r\n  }\r\n\r\n  node = nullthrows(node);\r\n  offset = nullthrows(offset);\r\n  var offsetKey = nullthrows(findAncestorOffsetKey(node));\r\n\r\n  return getUpdatedSelectionState(editorState, offsetKey, offset, offsetKey, offset);\r\n}\r\n\r\nvar DraftEditorDragHandler = {\r\n  /**\r\n   * Drag originating from input terminated.\r\n   */\r\n  onDragEnd: function onDragEnd(editor) {\r\n    editor.exitCurrentMode();\r\n  },\r\n\r\n  /**\r\n   * Handle data being dropped.\r\n   */\r\n  onDrop: function onDrop(editor, e) {\r\n    var data = new DataTransfer(e.nativeEvent.dataTransfer);\r\n\r\n    var editorState = editor._latestEditorState;\r\n    var dropSelection = getSelectionForEvent(e.nativeEvent, editorState);\r\n\r\n    e.preventDefault();\r\n    editor.exitCurrentMode();\r\n\r\n    if (dropSelection == null) {\r\n      return;\r\n    }\r\n\r\n    var files = data.getFiles();\r\n    if (files.length > 0) {\r\n      if (editor.props.handleDroppedFiles && isEventHandled(editor.props.handleDroppedFiles(dropSelection, files))) {\r\n        return;\r\n      }\r\n\r\n      getTextContentFromFiles(files, function (fileText) {\r\n        fileText && editor.update(insertTextAtSelection(editorState, dropSelection, fileText));\r\n      });\r\n      return;\r\n    }\r\n\r\n    var dragType = editor._internalDrag ? 'internal' : 'external';\r\n    if (editor.props.handleDrop && isEventHandled(editor.props.handleDrop(dropSelection, data, dragType))) {\r\n      return;\r\n    }\r\n\r\n    if (editor._internalDrag) {\r\n      editor.update(moveText(editorState, dropSelection));\r\n      return;\r\n    }\r\n\r\n    editor.update(insertTextAtSelection(editorState, dropSelection, data.getText()));\r\n  }\r\n};\r\n\r\nfunction moveText(editorState, targetSelection) {\r\n  var newContentState = DraftModifier.moveText(editorState.getCurrentContent(), editorState.getSelection(), targetSelection);\r\n  return EditorState.push(editorState, newContentState, 'insert-fragment');\r\n}\r\n\r\n/**\r\n * Insert text at a specified selection.\r\n */\r\nfunction insertTextAtSelection(editorState, selection, text) {\r\n  var newContentState = DraftModifier.insertText(editorState.getCurrentContent(), selection, text, editorState.getCurrentInlineStyle());\r\n  return EditorState.push(editorState, newContentState, 'insert-fragment');\r\n}\r\n\r\nmodule.exports = DraftEditorDragHandler;"],"mappings":"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"},"metadata":{},"sourceType":"script"}