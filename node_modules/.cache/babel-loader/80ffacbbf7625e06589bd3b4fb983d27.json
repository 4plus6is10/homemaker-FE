{"ast":null,"code":"/**\r\n * Copyright (c) 2013-present, Facebook, Inc.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree. An additional grant\r\n * of patent rights can be found in the PATENTS file in the same directory.\r\n *\r\n * @providesModule findRangesImmutable\r\n * @format\r\n * \r\n */\n'use strict';\n/**\r\n * Search through an array to find contiguous stretches of elements that\r\n * match a specified filter function.\r\n *\r\n * When ranges are found, execute a specified `found` function to supply\r\n * the values to the caller.\r\n */\n\nfunction findRangesImmutable(haystack, areEqualFn, filterFn, foundFn) {\n  if (!haystack.size) {\n    return;\n  }\n\n  var cursor = 0;\n  haystack.reduce(function (value, nextValue, nextIndex) {\n    if (!areEqualFn(value, nextValue)) {\n      if (filterFn(value)) {\n        foundFn(cursor, nextIndex);\n      }\n\n      cursor = nextIndex;\n    }\n\n    return nextValue;\n  });\n  filterFn(haystack.last()) && foundFn(cursor, haystack.count());\n}\n\nmodule.exports = findRangesImmutable;","map":{"version":3,"names":["findRangesImmutable","haystack","areEqualFn","filterFn","foundFn","size","cursor","reduce","value","nextValue","nextIndex","last","count","module","exports"],"sources":["C:/20220103_lab/15.final_project/Front/homemaker-FE/node_modules/draft-js/lib/findRangesImmutable.js"],"sourcesContent":["/**\r\n * Copyright (c) 2013-present, Facebook, Inc.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree. An additional grant\r\n * of patent rights can be found in the PATENTS file in the same directory.\r\n *\r\n * @providesModule findRangesImmutable\r\n * @format\r\n * \r\n */\r\n\r\n'use strict';\r\n\r\n/**\r\n * Search through an array to find contiguous stretches of elements that\r\n * match a specified filter function.\r\n *\r\n * When ranges are found, execute a specified `found` function to supply\r\n * the values to the caller.\r\n */\r\nfunction findRangesImmutable(haystack, areEqualFn, filterFn, foundFn) {\r\n  if (!haystack.size) {\r\n    return;\r\n  }\r\n\r\n  var cursor = 0;\r\n\r\n  haystack.reduce(function (value, nextValue, nextIndex) {\r\n    if (!areEqualFn(value, nextValue)) {\r\n      if (filterFn(value)) {\r\n        foundFn(cursor, nextIndex);\r\n      }\r\n      cursor = nextIndex;\r\n    }\r\n    return nextValue;\r\n  });\r\n\r\n  filterFn(haystack.last()) && foundFn(cursor, haystack.count());\r\n}\r\n\r\nmodule.exports = findRangesImmutable;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASA,mBAAT,CAA6BC,QAA7B,EAAuCC,UAAvC,EAAmDC,QAAnD,EAA6DC,OAA7D,EAAsE;EACpE,IAAI,CAACH,QAAQ,CAACI,IAAd,EAAoB;IAClB;EACD;;EAED,IAAIC,MAAM,GAAG,CAAb;EAEAL,QAAQ,CAACM,MAAT,CAAgB,UAAUC,KAAV,EAAiBC,SAAjB,EAA4BC,SAA5B,EAAuC;IACrD,IAAI,CAACR,UAAU,CAACM,KAAD,EAAQC,SAAR,CAAf,EAAmC;MACjC,IAAIN,QAAQ,CAACK,KAAD,CAAZ,EAAqB;QACnBJ,OAAO,CAACE,MAAD,EAASI,SAAT,CAAP;MACD;;MACDJ,MAAM,GAAGI,SAAT;IACD;;IACD,OAAOD,SAAP;EACD,CARD;EAUAN,QAAQ,CAACF,QAAQ,CAACU,IAAT,EAAD,CAAR,IAA6BP,OAAO,CAACE,MAAD,EAASL,QAAQ,CAACW,KAAT,EAAT,CAApC;AACD;;AAEDC,MAAM,CAACC,OAAP,GAAiBd,mBAAjB"},"metadata":{},"sourceType":"script"}