{"ast":null,"code":"/**\r\n * Copyright (c) 2013-present, Facebook, Inc.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree. An additional grant\r\n * of patent rights can be found in the PATENTS file in the same directory.\r\n *\r\n * @providesModule splitBlockInContentState\r\n * @format\r\n * \r\n */\n'use strict';\n\nvar ContentBlockNode = require('./ContentBlockNode');\n\nvar Immutable = require('immutable');\n\nvar generateRandomKey = require('./generateRandomKey');\n\nvar invariant = require('fbjs/lib/invariant');\n\nvar List = Immutable.List,\n    Map = Immutable.Map;\n\nvar transformBlock = function transformBlock(key, blockMap, func) {\n  if (!key) {\n    return;\n  }\n\n  var block = blockMap.get(key);\n\n  if (!block) {\n    return;\n  }\n\n  blockMap.set(key, func(block));\n};\n\nvar updateBlockMapLinks = function updateBlockMapLinks(blockMap, originalBlock, belowBlock) {\n  return blockMap.withMutations(function (blocks) {\n    var originalBlockKey = originalBlock.getKey();\n    var belowBlockKey = belowBlock.getKey(); // update block parent\n\n    transformBlock(originalBlock.getParentKey(), blocks, function (block) {\n      var parentChildrenList = block.getChildKeys();\n      var insertionIndex = parentChildrenList.indexOf(originalBlockKey) + 1;\n      var newChildrenArray = parentChildrenList.toArray();\n      newChildrenArray.splice(insertionIndex, 0, belowBlockKey);\n      return block.merge({\n        children: List(newChildrenArray)\n      });\n    }); // update original next block\n\n    transformBlock(originalBlock.getNextSiblingKey(), blocks, function (block) {\n      return block.merge({\n        prevSibling: belowBlockKey\n      });\n    }); // update original block\n\n    transformBlock(originalBlockKey, blocks, function (block) {\n      return block.merge({\n        nextSibling: belowBlockKey\n      });\n    }); // update below block\n\n    transformBlock(belowBlockKey, blocks, function (block) {\n      return block.merge({\n        prevSibling: originalBlockKey\n      });\n    });\n  });\n};\n\nvar splitBlockInContentState = function splitBlockInContentState(contentState, selectionState) {\n  !selectionState.isCollapsed() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Selection range must be collapsed.') : invariant(false) : void 0;\n  var key = selectionState.getAnchorKey();\n  var offset = selectionState.getAnchorOffset();\n  var blockMap = contentState.getBlockMap();\n  var blockToSplit = blockMap.get(key);\n  var text = blockToSplit.getText();\n  var chars = blockToSplit.getCharacterList();\n  var keyBelow = generateRandomKey();\n  var isExperimentalTreeBlock = blockToSplit instanceof ContentBlockNode;\n  var blockAbove = blockToSplit.merge({\n    text: text.slice(0, offset),\n    characterList: chars.slice(0, offset)\n  });\n  var blockBelow = blockAbove.merge({\n    key: keyBelow,\n    text: text.slice(offset),\n    characterList: chars.slice(offset),\n    data: Map()\n  });\n  var blocksBefore = blockMap.toSeq().takeUntil(function (v) {\n    return v === blockToSplit;\n  });\n  var blocksAfter = blockMap.toSeq().skipUntil(function (v) {\n    return v === blockToSplit;\n  }).rest();\n  var newBlocks = blocksBefore.concat([[key, blockAbove], [keyBelow, blockBelow]], blocksAfter).toOrderedMap();\n\n  if (isExperimentalTreeBlock) {\n    !blockToSplit.getChildKeys().isEmpty() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ContentBlockNode must not have children') : invariant(false) : void 0;\n    newBlocks = updateBlockMapLinks(newBlocks, blockAbove, blockBelow);\n  }\n\n  return contentState.merge({\n    blockMap: newBlocks,\n    selectionBefore: selectionState,\n    selectionAfter: selectionState.merge({\n      anchorKey: keyBelow,\n      anchorOffset: 0,\n      focusKey: keyBelow,\n      focusOffset: 0,\n      isBackward: false\n    })\n  });\n};\n\nmodule.exports = splitBlockInContentState;","map":{"version":3,"names":["ContentBlockNode","require","Immutable","generateRandomKey","invariant","List","Map","transformBlock","key","blockMap","func","block","get","set","updateBlockMapLinks","originalBlock","belowBlock","withMutations","blocks","originalBlockKey","getKey","belowBlockKey","getParentKey","parentChildrenList","getChildKeys","insertionIndex","indexOf","newChildrenArray","toArray","splice","merge","children","getNextSiblingKey","prevSibling","nextSibling","splitBlockInContentState","contentState","selectionState","isCollapsed","process","env","NODE_ENV","getAnchorKey","offset","getAnchorOffset","getBlockMap","blockToSplit","text","getText","chars","getCharacterList","keyBelow","isExperimentalTreeBlock","blockAbove","slice","characterList","blockBelow","data","blocksBefore","toSeq","takeUntil","v","blocksAfter","skipUntil","rest","newBlocks","concat","toOrderedMap","isEmpty","selectionBefore","selectionAfter","anchorKey","anchorOffset","focusKey","focusOffset","isBackward","module","exports"],"sources":["C:/20220103_lab/15.final_project/Front/homemaker-FE/node_modules/draft-js/lib/splitBlockInContentState.js"],"sourcesContent":["/**\r\n * Copyright (c) 2013-present, Facebook, Inc.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree. An additional grant\r\n * of patent rights can be found in the PATENTS file in the same directory.\r\n *\r\n * @providesModule splitBlockInContentState\r\n * @format\r\n * \r\n */\r\n\r\n'use strict';\r\n\r\nvar ContentBlockNode = require('./ContentBlockNode');\r\nvar Immutable = require('immutable');\r\n\r\nvar generateRandomKey = require('./generateRandomKey');\r\nvar invariant = require('fbjs/lib/invariant');\r\n\r\nvar List = Immutable.List,\r\n    Map = Immutable.Map;\r\n\r\n\r\nvar transformBlock = function transformBlock(key, blockMap, func) {\r\n  if (!key) {\r\n    return;\r\n  }\r\n\r\n  var block = blockMap.get(key);\r\n\r\n  if (!block) {\r\n    return;\r\n  }\r\n\r\n  blockMap.set(key, func(block));\r\n};\r\n\r\nvar updateBlockMapLinks = function updateBlockMapLinks(blockMap, originalBlock, belowBlock) {\r\n  return blockMap.withMutations(function (blocks) {\r\n    var originalBlockKey = originalBlock.getKey();\r\n    var belowBlockKey = belowBlock.getKey();\r\n\r\n    // update block parent\r\n    transformBlock(originalBlock.getParentKey(), blocks, function (block) {\r\n      var parentChildrenList = block.getChildKeys();\r\n      var insertionIndex = parentChildrenList.indexOf(originalBlockKey) + 1;\r\n      var newChildrenArray = parentChildrenList.toArray();\r\n\r\n      newChildrenArray.splice(insertionIndex, 0, belowBlockKey);\r\n\r\n      return block.merge({\r\n        children: List(newChildrenArray)\r\n      });\r\n    });\r\n\r\n    // update original next block\r\n    transformBlock(originalBlock.getNextSiblingKey(), blocks, function (block) {\r\n      return block.merge({\r\n        prevSibling: belowBlockKey\r\n      });\r\n    });\r\n\r\n    // update original block\r\n    transformBlock(originalBlockKey, blocks, function (block) {\r\n      return block.merge({\r\n        nextSibling: belowBlockKey\r\n      });\r\n    });\r\n\r\n    // update below block\r\n    transformBlock(belowBlockKey, blocks, function (block) {\r\n      return block.merge({\r\n        prevSibling: originalBlockKey\r\n      });\r\n    });\r\n  });\r\n};\r\n\r\nvar splitBlockInContentState = function splitBlockInContentState(contentState, selectionState) {\r\n  !selectionState.isCollapsed() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Selection range must be collapsed.') : invariant(false) : void 0;\r\n\r\n  var key = selectionState.getAnchorKey();\r\n  var offset = selectionState.getAnchorOffset();\r\n  var blockMap = contentState.getBlockMap();\r\n  var blockToSplit = blockMap.get(key);\r\n  var text = blockToSplit.getText();\r\n  var chars = blockToSplit.getCharacterList();\r\n  var keyBelow = generateRandomKey();\r\n  var isExperimentalTreeBlock = blockToSplit instanceof ContentBlockNode;\r\n\r\n  var blockAbove = blockToSplit.merge({\r\n    text: text.slice(0, offset),\r\n    characterList: chars.slice(0, offset)\r\n  });\r\n  var blockBelow = blockAbove.merge({\r\n    key: keyBelow,\r\n    text: text.slice(offset),\r\n    characterList: chars.slice(offset),\r\n    data: Map()\r\n  });\r\n\r\n  var blocksBefore = blockMap.toSeq().takeUntil(function (v) {\r\n    return v === blockToSplit;\r\n  });\r\n  var blocksAfter = blockMap.toSeq().skipUntil(function (v) {\r\n    return v === blockToSplit;\r\n  }).rest();\r\n  var newBlocks = blocksBefore.concat([[key, blockAbove], [keyBelow, blockBelow]], blocksAfter).toOrderedMap();\r\n\r\n  if (isExperimentalTreeBlock) {\r\n    !blockToSplit.getChildKeys().isEmpty() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ContentBlockNode must not have children') : invariant(false) : void 0;\r\n\r\n    newBlocks = updateBlockMapLinks(newBlocks, blockAbove, blockBelow);\r\n  }\r\n\r\n  return contentState.merge({\r\n    blockMap: newBlocks,\r\n    selectionBefore: selectionState,\r\n    selectionAfter: selectionState.merge({\r\n      anchorKey: keyBelow,\r\n      anchorOffset: 0,\r\n      focusKey: keyBelow,\r\n      focusOffset: 0,\r\n      isBackward: false\r\n    })\r\n  });\r\n};\r\n\r\nmodule.exports = splitBlockInContentState;"],"mappings":"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"},"metadata":{},"sourceType":"script"}