{"ast":null,"code":"/**\r\n * Copyright (c) 2013-present, Facebook, Inc.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree. An additional grant\r\n * of patent rights can be found in the PATENTS file in the same directory.\r\n *\r\n * @providesModule RichTextEditorUtil\r\n * @format\r\n * \r\n */\n'use strict';\n\nvar DraftModifier = require('./DraftModifier');\n\nvar EditorState = require('./EditorState');\n\nvar SelectionState = require('./SelectionState');\n\nvar adjustBlockDepthForContentState = require('./adjustBlockDepthForContentState');\n\nvar nullthrows = require('fbjs/lib/nullthrows');\n\nvar RichTextEditorUtil = {\n  currentBlockContainsLink: function currentBlockContainsLink(editorState) {\n    var selection = editorState.getSelection();\n    var contentState = editorState.getCurrentContent();\n    var entityMap = contentState.getEntityMap();\n    return contentState.getBlockForKey(selection.getAnchorKey()).getCharacterList().slice(selection.getStartOffset(), selection.getEndOffset()).some(function (v) {\n      var entity = v.getEntity();\n      return !!entity && entityMap.__get(entity).getType() === 'LINK';\n    });\n  },\n  getCurrentBlockType: function getCurrentBlockType(editorState) {\n    var selection = editorState.getSelection();\n    return editorState.getCurrentContent().getBlockForKey(selection.getStartKey()).getType();\n  },\n  getDataObjectForLinkURL: function getDataObjectForLinkURL(uri) {\n    return {\n      url: uri.toString()\n    };\n  },\n  handleKeyCommand: function handleKeyCommand(editorState, command) {\n    switch (command) {\n      case 'bold':\n        return RichTextEditorUtil.toggleInlineStyle(editorState, 'BOLD');\n\n      case 'italic':\n        return RichTextEditorUtil.toggleInlineStyle(editorState, 'ITALIC');\n\n      case 'underline':\n        return RichTextEditorUtil.toggleInlineStyle(editorState, 'UNDERLINE');\n\n      case 'code':\n        return RichTextEditorUtil.toggleCode(editorState);\n\n      case 'backspace':\n      case 'backspace-word':\n      case 'backspace-to-start-of-line':\n        return RichTextEditorUtil.onBackspace(editorState);\n\n      case 'delete':\n      case 'delete-word':\n      case 'delete-to-end-of-block':\n        return RichTextEditorUtil.onDelete(editorState);\n\n      default:\n        // they may have custom editor commands; ignore those\n        return null;\n    }\n  },\n  insertSoftNewline: function insertSoftNewline(editorState) {\n    var contentState = DraftModifier.insertText(editorState.getCurrentContent(), editorState.getSelection(), '\\n', editorState.getCurrentInlineStyle(), null);\n    var newEditorState = EditorState.push(editorState, contentState, 'insert-characters');\n    return EditorState.forceSelection(newEditorState, contentState.getSelectionAfter());\n  },\n\n  /**\r\n   * For collapsed selections at the start of styled blocks, backspace should\r\n   * just remove the existing style.\r\n   */\n  onBackspace: function onBackspace(editorState) {\n    var selection = editorState.getSelection();\n\n    if (!selection.isCollapsed() || selection.getAnchorOffset() || selection.getFocusOffset()) {\n      return null;\n    } // First, try to remove a preceding atomic block.\n\n\n    var content = editorState.getCurrentContent();\n    var startKey = selection.getStartKey();\n    var blockBefore = content.getBlockBefore(startKey);\n\n    if (blockBefore && blockBefore.getType() === 'atomic') {\n      var blockMap = content.getBlockMap()['delete'](blockBefore.getKey());\n      var withoutAtomicBlock = content.merge({\n        blockMap: blockMap,\n        selectionAfter: selection\n      });\n\n      if (withoutAtomicBlock !== content) {\n        return EditorState.push(editorState, withoutAtomicBlock, 'remove-range');\n      }\n    } // If that doesn't succeed, try to remove the current block style.\n\n\n    var withoutBlockStyle = RichTextEditorUtil.tryToRemoveBlockStyle(editorState);\n\n    if (withoutBlockStyle) {\n      return EditorState.push(editorState, withoutBlockStyle, 'change-block-type');\n    }\n\n    return null;\n  },\n  onDelete: function onDelete(editorState) {\n    var selection = editorState.getSelection();\n\n    if (!selection.isCollapsed()) {\n      return null;\n    }\n\n    var content = editorState.getCurrentContent();\n    var startKey = selection.getStartKey();\n    var block = content.getBlockForKey(startKey);\n    var length = block.getLength(); // The cursor is somewhere within the text. Behave normally.\n\n    if (selection.getStartOffset() < length) {\n      return null;\n    }\n\n    var blockAfter = content.getBlockAfter(startKey);\n\n    if (!blockAfter || blockAfter.getType() !== 'atomic') {\n      return null;\n    }\n\n    var atomicBlockTarget = selection.merge({\n      focusKey: blockAfter.getKey(),\n      focusOffset: blockAfter.getLength()\n    });\n    var withoutAtomicBlock = DraftModifier.removeRange(content, atomicBlockTarget, 'forward');\n\n    if (withoutAtomicBlock !== content) {\n      return EditorState.push(editorState, withoutAtomicBlock, 'remove-range');\n    }\n\n    return null;\n  },\n  onTab: function onTab(event, editorState, maxDepth) {\n    var selection = editorState.getSelection();\n    var key = selection.getAnchorKey();\n\n    if (key !== selection.getFocusKey()) {\n      return editorState;\n    }\n\n    var content = editorState.getCurrentContent();\n    var block = content.getBlockForKey(key);\n    var type = block.getType();\n\n    if (type !== 'unordered-list-item' && type !== 'ordered-list-item') {\n      return editorState;\n    }\n\n    event.preventDefault(); // Only allow indenting one level beyond the block above, and only if\n    // the block above is a list item as well.\n\n    var blockAbove = content.getBlockBefore(key);\n\n    if (!blockAbove) {\n      return editorState;\n    }\n\n    var typeAbove = blockAbove.getType();\n\n    if (typeAbove !== 'unordered-list-item' && typeAbove !== 'ordered-list-item') {\n      return editorState;\n    }\n\n    var depth = block.getDepth();\n\n    if (!event.shiftKey && depth === maxDepth) {\n      return editorState;\n    }\n\n    maxDepth = Math.min(blockAbove.getDepth() + 1, maxDepth);\n    var withAdjustment = adjustBlockDepthForContentState(content, selection, event.shiftKey ? -1 : 1, maxDepth);\n    return EditorState.push(editorState, withAdjustment, 'adjust-depth');\n  },\n  toggleBlockType: function toggleBlockType(editorState, blockType) {\n    var selection = editorState.getSelection();\n    var startKey = selection.getStartKey();\n    var endKey = selection.getEndKey();\n    var content = editorState.getCurrentContent();\n    var target = selection; // Triple-click can lead to a selection that includes offset 0 of the\n    // following block. The `SelectionState` for this case is accurate, but\n    // we should avoid toggling block type for the trailing block because it\n    // is a confusing interaction.\n\n    if (startKey !== endKey && selection.getEndOffset() === 0) {\n      var blockBefore = nullthrows(content.getBlockBefore(endKey));\n      endKey = blockBefore.getKey();\n      target = target.merge({\n        anchorKey: startKey,\n        anchorOffset: selection.getStartOffset(),\n        focusKey: endKey,\n        focusOffset: blockBefore.getLength(),\n        isBackward: false\n      });\n    }\n\n    var hasAtomicBlock = content.getBlockMap().skipWhile(function (_, k) {\n      return k !== startKey;\n    }).reverse().skipWhile(function (_, k) {\n      return k !== endKey;\n    }).some(function (v) {\n      return v.getType() === 'atomic';\n    });\n\n    if (hasAtomicBlock) {\n      return editorState;\n    }\n\n    var typeToSet = content.getBlockForKey(startKey).getType() === blockType ? 'unstyled' : blockType;\n    return EditorState.push(editorState, DraftModifier.setBlockType(content, target, typeToSet), 'change-block-type');\n  },\n  toggleCode: function toggleCode(editorState) {\n    var selection = editorState.getSelection();\n    var anchorKey = selection.getAnchorKey();\n    var focusKey = selection.getFocusKey();\n\n    if (selection.isCollapsed() || anchorKey !== focusKey) {\n      return RichTextEditorUtil.toggleBlockType(editorState, 'code-block');\n    }\n\n    return RichTextEditorUtil.toggleInlineStyle(editorState, 'CODE');\n  },\n\n  /**\r\n   * Toggle the specified inline style for the selection. If the\r\n   * user's selection is collapsed, apply or remove the style for the\r\n   * internal state. If it is not collapsed, apply the change directly\r\n   * to the document state.\r\n   */\n  toggleInlineStyle: function toggleInlineStyle(editorState, inlineStyle) {\n    var selection = editorState.getSelection();\n    var currentStyle = editorState.getCurrentInlineStyle(); // If the selection is collapsed, toggle the specified style on or off and\n    // set the result as the new inline style override. This will then be\n    // used as the inline style for the next character to be inserted.\n\n    if (selection.isCollapsed()) {\n      return EditorState.setInlineStyleOverride(editorState, currentStyle.has(inlineStyle) ? currentStyle.remove(inlineStyle) : currentStyle.add(inlineStyle));\n    } // If characters are selected, immediately apply or remove the\n    // inline style on the document state itself.\n\n\n    var content = editorState.getCurrentContent();\n    var newContent; // If the style is already present for the selection range, remove it.\n    // Otherwise, apply it.\n\n    if (currentStyle.has(inlineStyle)) {\n      newContent = DraftModifier.removeInlineStyle(content, selection, inlineStyle);\n    } else {\n      newContent = DraftModifier.applyInlineStyle(content, selection, inlineStyle);\n    }\n\n    return EditorState.push(editorState, newContent, 'change-inline-style');\n  },\n  toggleLink: function toggleLink(editorState, targetSelection, entityKey) {\n    var withoutLink = DraftModifier.applyEntity(editorState.getCurrentContent(), targetSelection, entityKey);\n    return EditorState.push(editorState, withoutLink, 'apply-entity');\n  },\n\n  /**\r\n   * When a collapsed cursor is at the start of the first styled block, or\r\n   * an empty styled block, changes block to 'unstyled'. Returns null if\r\n   * block or selection does not meet that criteria.\r\n   */\n  tryToRemoveBlockStyle: function tryToRemoveBlockStyle(editorState) {\n    var selection = editorState.getSelection();\n    var offset = selection.getAnchorOffset();\n\n    if (selection.isCollapsed() && offset === 0) {\n      var key = selection.getAnchorKey();\n      var content = editorState.getCurrentContent();\n      var block = content.getBlockForKey(key);\n      var firstBlock = content.getFirstBlock();\n\n      if (block.getLength() > 0 && block !== firstBlock) {\n        return null;\n      }\n\n      var type = block.getType();\n      var blockBefore = content.getBlockBefore(key);\n\n      if (type === 'code-block' && blockBefore && blockBefore.getType() === 'code-block' && blockBefore.getLength() !== 0) {\n        return null;\n      }\n\n      if (type !== 'unstyled') {\n        return DraftModifier.setBlockType(content, selection, 'unstyled');\n      }\n    }\n\n    return null;\n  }\n};\nmodule.exports = RichTextEditorUtil;","map":{"version":3,"names":["DraftModifier","require","EditorState","SelectionState","adjustBlockDepthForContentState","nullthrows","RichTextEditorUtil","currentBlockContainsLink","editorState","selection","getSelection","contentState","getCurrentContent","entityMap","getEntityMap","getBlockForKey","getAnchorKey","getCharacterList","slice","getStartOffset","getEndOffset","some","v","entity","getEntity","__get","getType","getCurrentBlockType","getStartKey","getDataObjectForLinkURL","uri","url","toString","handleKeyCommand","command","toggleInlineStyle","toggleCode","onBackspace","onDelete","insertSoftNewline","insertText","getCurrentInlineStyle","newEditorState","push","forceSelection","getSelectionAfter","isCollapsed","getAnchorOffset","getFocusOffset","content","startKey","blockBefore","getBlockBefore","blockMap","getBlockMap","getKey","withoutAtomicBlock","merge","selectionAfter","withoutBlockStyle","tryToRemoveBlockStyle","block","length","getLength","blockAfter","getBlockAfter","atomicBlockTarget","focusKey","focusOffset","removeRange","onTab","event","maxDepth","key","getFocusKey","type","preventDefault","blockAbove","typeAbove","depth","getDepth","shiftKey","Math","min","withAdjustment","toggleBlockType","blockType","endKey","getEndKey","target","anchorKey","anchorOffset","isBackward","hasAtomicBlock","skipWhile","_","k","reverse","typeToSet","setBlockType","inlineStyle","currentStyle","setInlineStyleOverride","has","remove","add","newContent","removeInlineStyle","applyInlineStyle","toggleLink","targetSelection","entityKey","withoutLink","applyEntity","offset","firstBlock","getFirstBlock","module","exports"],"sources":["C:/20220103_lab/15.final_project/Front/homemaker-FE/node_modules/draft-js/lib/RichTextEditorUtil.js"],"sourcesContent":["/**\r\n * Copyright (c) 2013-present, Facebook, Inc.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree. An additional grant\r\n * of patent rights can be found in the PATENTS file in the same directory.\r\n *\r\n * @providesModule RichTextEditorUtil\r\n * @format\r\n * \r\n */\r\n\r\n'use strict';\r\n\r\nvar DraftModifier = require('./DraftModifier');\r\nvar EditorState = require('./EditorState');\r\nvar SelectionState = require('./SelectionState');\r\n\r\nvar adjustBlockDepthForContentState = require('./adjustBlockDepthForContentState');\r\nvar nullthrows = require('fbjs/lib/nullthrows');\r\n\r\nvar RichTextEditorUtil = {\r\n  currentBlockContainsLink: function currentBlockContainsLink(editorState) {\r\n    var selection = editorState.getSelection();\r\n    var contentState = editorState.getCurrentContent();\r\n    var entityMap = contentState.getEntityMap();\r\n    return contentState.getBlockForKey(selection.getAnchorKey()).getCharacterList().slice(selection.getStartOffset(), selection.getEndOffset()).some(function (v) {\r\n      var entity = v.getEntity();\r\n      return !!entity && entityMap.__get(entity).getType() === 'LINK';\r\n    });\r\n  },\r\n\r\n  getCurrentBlockType: function getCurrentBlockType(editorState) {\r\n    var selection = editorState.getSelection();\r\n    return editorState.getCurrentContent().getBlockForKey(selection.getStartKey()).getType();\r\n  },\r\n\r\n  getDataObjectForLinkURL: function getDataObjectForLinkURL(uri) {\r\n    return { url: uri.toString() };\r\n  },\r\n\r\n  handleKeyCommand: function handleKeyCommand(editorState, command) {\r\n    switch (command) {\r\n      case 'bold':\r\n        return RichTextEditorUtil.toggleInlineStyle(editorState, 'BOLD');\r\n      case 'italic':\r\n        return RichTextEditorUtil.toggleInlineStyle(editorState, 'ITALIC');\r\n      case 'underline':\r\n        return RichTextEditorUtil.toggleInlineStyle(editorState, 'UNDERLINE');\r\n      case 'code':\r\n        return RichTextEditorUtil.toggleCode(editorState);\r\n      case 'backspace':\r\n      case 'backspace-word':\r\n      case 'backspace-to-start-of-line':\r\n        return RichTextEditorUtil.onBackspace(editorState);\r\n      case 'delete':\r\n      case 'delete-word':\r\n      case 'delete-to-end-of-block':\r\n        return RichTextEditorUtil.onDelete(editorState);\r\n      default:\r\n        // they may have custom editor commands; ignore those\r\n        return null;\r\n    }\r\n  },\r\n\r\n  insertSoftNewline: function insertSoftNewline(editorState) {\r\n    var contentState = DraftModifier.insertText(editorState.getCurrentContent(), editorState.getSelection(), '\\n', editorState.getCurrentInlineStyle(), null);\r\n\r\n    var newEditorState = EditorState.push(editorState, contentState, 'insert-characters');\r\n\r\n    return EditorState.forceSelection(newEditorState, contentState.getSelectionAfter());\r\n  },\r\n\r\n  /**\r\n   * For collapsed selections at the start of styled blocks, backspace should\r\n   * just remove the existing style.\r\n   */\r\n  onBackspace: function onBackspace(editorState) {\r\n    var selection = editorState.getSelection();\r\n    if (!selection.isCollapsed() || selection.getAnchorOffset() || selection.getFocusOffset()) {\r\n      return null;\r\n    }\r\n\r\n    // First, try to remove a preceding atomic block.\r\n    var content = editorState.getCurrentContent();\r\n    var startKey = selection.getStartKey();\r\n    var blockBefore = content.getBlockBefore(startKey);\r\n\r\n    if (blockBefore && blockBefore.getType() === 'atomic') {\r\n      var blockMap = content.getBlockMap()['delete'](blockBefore.getKey());\r\n      var withoutAtomicBlock = content.merge({\r\n        blockMap: blockMap,\r\n        selectionAfter: selection\r\n      });\r\n      if (withoutAtomicBlock !== content) {\r\n        return EditorState.push(editorState, withoutAtomicBlock, 'remove-range');\r\n      }\r\n    }\r\n\r\n    // If that doesn't succeed, try to remove the current block style.\r\n    var withoutBlockStyle = RichTextEditorUtil.tryToRemoveBlockStyle(editorState);\r\n\r\n    if (withoutBlockStyle) {\r\n      return EditorState.push(editorState, withoutBlockStyle, 'change-block-type');\r\n    }\r\n\r\n    return null;\r\n  },\r\n\r\n  onDelete: function onDelete(editorState) {\r\n    var selection = editorState.getSelection();\r\n    if (!selection.isCollapsed()) {\r\n      return null;\r\n    }\r\n\r\n    var content = editorState.getCurrentContent();\r\n    var startKey = selection.getStartKey();\r\n    var block = content.getBlockForKey(startKey);\r\n    var length = block.getLength();\r\n\r\n    // The cursor is somewhere within the text. Behave normally.\r\n    if (selection.getStartOffset() < length) {\r\n      return null;\r\n    }\r\n\r\n    var blockAfter = content.getBlockAfter(startKey);\r\n\r\n    if (!blockAfter || blockAfter.getType() !== 'atomic') {\r\n      return null;\r\n    }\r\n\r\n    var atomicBlockTarget = selection.merge({\r\n      focusKey: blockAfter.getKey(),\r\n      focusOffset: blockAfter.getLength()\r\n    });\r\n\r\n    var withoutAtomicBlock = DraftModifier.removeRange(content, atomicBlockTarget, 'forward');\r\n\r\n    if (withoutAtomicBlock !== content) {\r\n      return EditorState.push(editorState, withoutAtomicBlock, 'remove-range');\r\n    }\r\n\r\n    return null;\r\n  },\r\n\r\n  onTab: function onTab(event, editorState, maxDepth) {\r\n    var selection = editorState.getSelection();\r\n    var key = selection.getAnchorKey();\r\n    if (key !== selection.getFocusKey()) {\r\n      return editorState;\r\n    }\r\n\r\n    var content = editorState.getCurrentContent();\r\n    var block = content.getBlockForKey(key);\r\n    var type = block.getType();\r\n    if (type !== 'unordered-list-item' && type !== 'ordered-list-item') {\r\n      return editorState;\r\n    }\r\n\r\n    event.preventDefault();\r\n\r\n    // Only allow indenting one level beyond the block above, and only if\r\n    // the block above is a list item as well.\r\n    var blockAbove = content.getBlockBefore(key);\r\n    if (!blockAbove) {\r\n      return editorState;\r\n    }\r\n\r\n    var typeAbove = blockAbove.getType();\r\n    if (typeAbove !== 'unordered-list-item' && typeAbove !== 'ordered-list-item') {\r\n      return editorState;\r\n    }\r\n\r\n    var depth = block.getDepth();\r\n    if (!event.shiftKey && depth === maxDepth) {\r\n      return editorState;\r\n    }\r\n\r\n    maxDepth = Math.min(blockAbove.getDepth() + 1, maxDepth);\r\n\r\n    var withAdjustment = adjustBlockDepthForContentState(content, selection, event.shiftKey ? -1 : 1, maxDepth);\r\n\r\n    return EditorState.push(editorState, withAdjustment, 'adjust-depth');\r\n  },\r\n\r\n  toggleBlockType: function toggleBlockType(editorState, blockType) {\r\n    var selection = editorState.getSelection();\r\n    var startKey = selection.getStartKey();\r\n    var endKey = selection.getEndKey();\r\n    var content = editorState.getCurrentContent();\r\n    var target = selection;\r\n\r\n    // Triple-click can lead to a selection that includes offset 0 of the\r\n    // following block. The `SelectionState` for this case is accurate, but\r\n    // we should avoid toggling block type for the trailing block because it\r\n    // is a confusing interaction.\r\n    if (startKey !== endKey && selection.getEndOffset() === 0) {\r\n      var blockBefore = nullthrows(content.getBlockBefore(endKey));\r\n      endKey = blockBefore.getKey();\r\n      target = target.merge({\r\n        anchorKey: startKey,\r\n        anchorOffset: selection.getStartOffset(),\r\n        focusKey: endKey,\r\n        focusOffset: blockBefore.getLength(),\r\n        isBackward: false\r\n      });\r\n    }\r\n\r\n    var hasAtomicBlock = content.getBlockMap().skipWhile(function (_, k) {\r\n      return k !== startKey;\r\n    }).reverse().skipWhile(function (_, k) {\r\n      return k !== endKey;\r\n    }).some(function (v) {\r\n      return v.getType() === 'atomic';\r\n    });\r\n\r\n    if (hasAtomicBlock) {\r\n      return editorState;\r\n    }\r\n\r\n    var typeToSet = content.getBlockForKey(startKey).getType() === blockType ? 'unstyled' : blockType;\r\n\r\n    return EditorState.push(editorState, DraftModifier.setBlockType(content, target, typeToSet), 'change-block-type');\r\n  },\r\n\r\n  toggleCode: function toggleCode(editorState) {\r\n    var selection = editorState.getSelection();\r\n    var anchorKey = selection.getAnchorKey();\r\n    var focusKey = selection.getFocusKey();\r\n\r\n    if (selection.isCollapsed() || anchorKey !== focusKey) {\r\n      return RichTextEditorUtil.toggleBlockType(editorState, 'code-block');\r\n    }\r\n\r\n    return RichTextEditorUtil.toggleInlineStyle(editorState, 'CODE');\r\n  },\r\n\r\n  /**\r\n   * Toggle the specified inline style for the selection. If the\r\n   * user's selection is collapsed, apply or remove the style for the\r\n   * internal state. If it is not collapsed, apply the change directly\r\n   * to the document state.\r\n   */\r\n  toggleInlineStyle: function toggleInlineStyle(editorState, inlineStyle) {\r\n    var selection = editorState.getSelection();\r\n    var currentStyle = editorState.getCurrentInlineStyle();\r\n\r\n    // If the selection is collapsed, toggle the specified style on or off and\r\n    // set the result as the new inline style override. This will then be\r\n    // used as the inline style for the next character to be inserted.\r\n    if (selection.isCollapsed()) {\r\n      return EditorState.setInlineStyleOverride(editorState, currentStyle.has(inlineStyle) ? currentStyle.remove(inlineStyle) : currentStyle.add(inlineStyle));\r\n    }\r\n\r\n    // If characters are selected, immediately apply or remove the\r\n    // inline style on the document state itself.\r\n    var content = editorState.getCurrentContent();\r\n    var newContent;\r\n\r\n    // If the style is already present for the selection range, remove it.\r\n    // Otherwise, apply it.\r\n    if (currentStyle.has(inlineStyle)) {\r\n      newContent = DraftModifier.removeInlineStyle(content, selection, inlineStyle);\r\n    } else {\r\n      newContent = DraftModifier.applyInlineStyle(content, selection, inlineStyle);\r\n    }\r\n\r\n    return EditorState.push(editorState, newContent, 'change-inline-style');\r\n  },\r\n\r\n  toggleLink: function toggleLink(editorState, targetSelection, entityKey) {\r\n    var withoutLink = DraftModifier.applyEntity(editorState.getCurrentContent(), targetSelection, entityKey);\r\n\r\n    return EditorState.push(editorState, withoutLink, 'apply-entity');\r\n  },\r\n\r\n  /**\r\n   * When a collapsed cursor is at the start of the first styled block, or\r\n   * an empty styled block, changes block to 'unstyled'. Returns null if\r\n   * block or selection does not meet that criteria.\r\n   */\r\n  tryToRemoveBlockStyle: function tryToRemoveBlockStyle(editorState) {\r\n    var selection = editorState.getSelection();\r\n    var offset = selection.getAnchorOffset();\r\n    if (selection.isCollapsed() && offset === 0) {\r\n      var key = selection.getAnchorKey();\r\n      var content = editorState.getCurrentContent();\r\n      var block = content.getBlockForKey(key);\r\n\r\n      var firstBlock = content.getFirstBlock();\r\n      if (block.getLength() > 0 && block !== firstBlock) {\r\n        return null;\r\n      }\r\n\r\n      var type = block.getType();\r\n      var blockBefore = content.getBlockBefore(key);\r\n      if (type === 'code-block' && blockBefore && blockBefore.getType() === 'code-block' && blockBefore.getLength() !== 0) {\r\n        return null;\r\n      }\r\n\r\n      if (type !== 'unstyled') {\r\n        return DraftModifier.setBlockType(content, selection, 'unstyled');\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n};\r\n\r\nmodule.exports = RichTextEditorUtil;"],"mappings":"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"},"metadata":{},"sourceType":"script"}