{"ast":null,"code":"var _jsxFileName = \"C:\\\\20220103_lab\\\\15.final_project\\\\Front\\\\homemaker-FE\\\\src\\\\Search\\\\Sections\\\\CheckBox.js\";\nimport React, { useState } from \"react\";\nimport { Collapse, Checkbox } from \"antd\";\nconst {\n  Panel\n} = Collapse;\n\nconst CheckBox = props => {\n  const [Checked, setChecked] = useState([]);\n\n  const handleToggle = value => {\n    //누른것의 Index를 구하고\n    //indexOf에서 값이 -1이 뜬다면 그 값이없다 라는 뜻\n    const currentIndex = Checked.indexOf(value); //전체 checked된 state에서 현재 누른 checkbox가 이미 있다면\n\n    const newChecked = [...Checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n    props.handleFilters(newChecked); //빼주고\n    // State를 넣어준다.\n  };\n\n  const renderCheckboxLists = () => props.list && props.list.map((value, index) => /*#__PURE__*/React.createElement(React.Fragment, {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    onChange: () => handleToggle(value._id),\n    checked: Checked.indexOf(value._id) === -1 ? false : true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \" \", value.name)));\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Collapse, {\n    defaultActiveKey: [\"0\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Panel, {\n    header: \"\\uD0A4\\uC6CC\\uB4DC\",\n    key: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, renderCheckboxLists())));\n};\n\nexport default CheckBox;","map":{"version":3,"names":["React","useState","Collapse","Checkbox","Panel","CheckBox","props","Checked","setChecked","handleToggle","value","currentIndex","indexOf","newChecked","push","splice","handleFilters","renderCheckboxLists","list","map","index","_id","name"],"sources":["C:/20220103_lab/15.final_project/Front/homemaker-FE/src/Search/Sections/CheckBox.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Collapse, Checkbox } from \"antd\";\r\n\r\nconst { Panel } = Collapse;\r\n\r\nconst CheckBox = (props) => {\r\n  const [Checked, setChecked] = useState([]);\r\n\r\n  const handleToggle = (value) => {\r\n    //누른것의 Index를 구하고\r\n    //indexOf에서 값이 -1이 뜬다면 그 값이없다 라는 뜻\r\n\r\n    const currentIndex = Checked.indexOf(value);\r\n\r\n    //전체 checked된 state에서 현재 누른 checkbox가 이미 있다면\r\n\r\n    const newChecked = [...Checked];\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    setChecked(newChecked);\r\n    props.handleFilters(newChecked);\r\n    //빼주고\r\n\r\n    // State를 넣어준다.\r\n  };\r\n\r\n  const renderCheckboxLists = () =>\r\n    props.list &&\r\n    props.list.map((value, index) => (\r\n      <React.Fragment key={index}>\r\n        <Checkbox\r\n          onChange={() => handleToggle(value._id)}\r\n          checked={Checked.indexOf(value._id) === -1 ? false : true}\r\n        />\r\n        <span> {value.name}</span>\r\n      </React.Fragment>\r\n    ));\r\n\r\n  return (\r\n    <div>\r\n    {/*  defaultActiveKey 를 1로하면 디폴트로 펼쳐져있고 0으로하면 접혀있음*/}\r\n      <Collapse defaultActiveKey={[\"0\"]}>\r\n        <Panel header=\"키워드\" key=\"1\">\r\n          {renderCheckboxLists()}\r\n        </Panel>\r\n      </Collapse>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CheckBox;"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,MAAnC;AAEA,MAAM;EAAEC;AAAF,IAAYF,QAAlB;;AAEA,MAAMG,QAAQ,GAAIC,KAAD,IAAW;EAC1B,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;;EAEA,MAAMQ,YAAY,GAAIC,KAAD,IAAW;IAC9B;IACA;IAEA,MAAMC,YAAY,GAAGJ,OAAO,CAACK,OAAR,CAAgBF,KAAhB,CAArB,CAJ8B,CAM9B;;IAEA,MAAMG,UAAU,GAAG,CAAC,GAAGN,OAAJ,CAAnB;;IAEA,IAAII,YAAY,KAAK,CAAC,CAAtB,EAAyB;MACvBE,UAAU,CAACC,IAAX,CAAgBJ,KAAhB;IACD,CAFD,MAEO;MACLG,UAAU,CAACE,MAAX,CAAkBJ,YAAlB,EAAgC,CAAhC;IACD;;IAEDH,UAAU,CAACK,UAAD,CAAV;IACAP,KAAK,CAACU,aAAN,CAAoBH,UAApB,EAjB8B,CAkB9B;IAEA;EACD,CArBD;;EAuBA,MAAMI,mBAAmB,GAAG,MAC1BX,KAAK,CAACY,IAAN,IACAZ,KAAK,CAACY,IAAN,CAAWC,GAAX,CAAe,CAACT,KAAD,EAAQU,KAAR,kBACb,oBAAC,KAAD,CAAO,QAAP;IAAgB,GAAG,EAAEA,KAArB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,QAAD;IACE,QAAQ,EAAE,MAAMX,YAAY,CAACC,KAAK,CAACW,GAAP,CAD9B;IAEE,OAAO,EAAEd,OAAO,CAACK,OAAR,CAAgBF,KAAK,CAACW,GAAtB,MAA+B,CAAC,CAAhC,GAAoC,KAApC,GAA4C,IAFvD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,eAKE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,QAAQX,KAAK,CAACY,IAAd,CALF,CADF,CAFF;;EAYA,oBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAEE,oBAAC,QAAD;IAAU,gBAAgB,EAAE,CAAC,GAAD,CAA5B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,KAAD;IAAO,MAAM,EAAC,oBAAd;IAAoB,GAAG,EAAC,GAAxB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACGL,mBAAmB,EADtB,CADF,CAFF,CADF;AAUD,CAhDD;;AAkDA,eAAeZ,QAAf"},"metadata":{},"sourceType":"module"}