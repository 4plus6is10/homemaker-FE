{"ast":null,"code":"'use strict';\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n/**\r\n * Copyright (c) 2013-present, Facebook, Inc.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @typechecks\r\n */\n\n\nvar PhotosMimeType = require('./PhotosMimeType');\n\nvar createArrayFromMixed = require('./createArrayFromMixed');\n\nvar emptyFunction = require('./emptyFunction');\n\nvar CR_LF_REGEX = new RegExp('\\r\\n', 'g');\nvar LF_ONLY = '\\n';\nvar RICH_TEXT_TYPES = {\n  'text/rtf': 1,\n  'text/html': 1\n};\n/**\r\n * If DataTransferItem is a file then return the Blob of data.\r\n *\r\n * @param {object} item\r\n * @return {?blob}\r\n */\n\nfunction getFileFromDataTransfer(item) {\n  if (item.kind == 'file') {\n    return item.getAsFile();\n  }\n}\n\nvar DataTransfer = function () {\n  /**\r\n   * @param {object} data\r\n   */\n  function DataTransfer(data) {\n    _classCallCheck(this, DataTransfer);\n\n    this.data = data; // Types could be DOMStringList or array\n\n    this.types = data.types ? createArrayFromMixed(data.types) : [];\n  }\n  /**\r\n   * Is this likely to be a rich text data transfer?\r\n   *\r\n   * @return {boolean}\r\n   */\n\n\n  DataTransfer.prototype.isRichText = function isRichText() {\n    // If HTML is available, treat this data as rich text. This way, we avoid\n    // using a pasted image if it is packaged with HTML -- this may occur with\n    // pastes from MS Word, for example.  However this is only rich text if\n    // there's accompanying text.\n    if (this.getHTML() && this.getText()) {\n      return true;\n    } // When an image is copied from a preview window, you end up with two\n    // DataTransferItems one of which is a file's metadata as text.  Skip those.\n\n\n    if (this.isImage()) {\n      return false;\n    }\n\n    return this.types.some(function (type) {\n      return RICH_TEXT_TYPES[type];\n    });\n  };\n  /**\r\n   * Get raw text.\r\n   *\r\n   * @return {?string}\r\n   */\n\n\n  DataTransfer.prototype.getText = function getText() {\n    var text;\n\n    if (this.data.getData) {\n      if (!this.types.length) {\n        text = this.data.getData('Text');\n      } else if (this.types.indexOf('text/plain') != -1) {\n        text = this.data.getData('text/plain');\n      }\n    }\n\n    return text ? text.replace(CR_LF_REGEX, LF_ONLY) : null;\n  };\n  /**\r\n   * Get HTML paste data\r\n   *\r\n   * @return {?string}\r\n   */\n\n\n  DataTransfer.prototype.getHTML = function getHTML() {\n    if (this.data.getData) {\n      if (!this.types.length) {\n        return this.data.getData('Text');\n      } else if (this.types.indexOf('text/html') != -1) {\n        return this.data.getData('text/html');\n      }\n    }\n  };\n  /**\r\n   * Is this a link data transfer?\r\n   *\r\n   * @return {boolean}\r\n   */\n\n\n  DataTransfer.prototype.isLink = function isLink() {\n    return this.types.some(function (type) {\n      return type.indexOf('Url') != -1 || type.indexOf('text/uri-list') != -1 || type.indexOf('text/x-moz-url');\n    });\n  };\n  /**\r\n   * Get a link url.\r\n   *\r\n   * @return {?string}\r\n   */\n\n\n  DataTransfer.prototype.getLink = function getLink() {\n    if (this.data.getData) {\n      if (this.types.indexOf('text/x-moz-url') != -1) {\n        var url = this.data.getData('text/x-moz-url').split('\\n');\n        return url[0];\n      }\n\n      return this.types.indexOf('text/uri-list') != -1 ? this.data.getData('text/uri-list') : this.data.getData('url');\n    }\n\n    return null;\n  };\n  /**\r\n   * Is this an image data transfer?\r\n   *\r\n   * @return {boolean}\r\n   */\n\n\n  DataTransfer.prototype.isImage = function isImage() {\n    var isImage = this.types.some(function (type) {\n      // Firefox will have a type of application/x-moz-file for images during\n      // dragging\n      return type.indexOf('application/x-moz-file') != -1;\n    });\n\n    if (isImage) {\n      return true;\n    }\n\n    var items = this.getFiles();\n\n    for (var i = 0; i < items.length; i++) {\n      var type = items[i].type;\n\n      if (!PhotosMimeType.isImage(type)) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  DataTransfer.prototype.getCount = function getCount() {\n    if (this.data.hasOwnProperty('items')) {\n      return this.data.items.length;\n    } else if (this.data.hasOwnProperty('mozItemCount')) {\n      return this.data.mozItemCount;\n    } else if (this.data.files) {\n      return this.data.files.length;\n    }\n\n    return null;\n  };\n  /**\r\n   * Get files.\r\n   *\r\n   * @return {array}\r\n   */\n\n\n  DataTransfer.prototype.getFiles = function getFiles() {\n    if (this.data.items) {\n      // createArrayFromMixed doesn't properly handle DataTransferItemLists.\n      return Array.prototype.slice.call(this.data.items).map(getFileFromDataTransfer).filter(emptyFunction.thatReturnsArgument);\n    } else if (this.data.files) {\n      return Array.prototype.slice.call(this.data.files);\n    } else {\n      return [];\n    }\n  };\n  /**\r\n   * Are there any files to fetch?\r\n   *\r\n   * @return {boolean}\r\n   */\n\n\n  DataTransfer.prototype.hasFiles = function hasFiles() {\n    return this.getFiles().length > 0;\n  };\n\n  return DataTransfer;\n}();\n\nmodule.exports = DataTransfer;","map":{"version":3,"names":["_classCallCheck","instance","Constructor","TypeError","PhotosMimeType","require","createArrayFromMixed","emptyFunction","CR_LF_REGEX","RegExp","LF_ONLY","RICH_TEXT_TYPES","getFileFromDataTransfer","item","kind","getAsFile","DataTransfer","data","types","prototype","isRichText","getHTML","getText","isImage","some","type","text","getData","length","indexOf","replace","isLink","getLink","url","split","items","getFiles","i","getCount","hasOwnProperty","mozItemCount","files","Array","slice","call","map","filter","thatReturnsArgument","hasFiles","module","exports"],"sources":["C:/20220103_lab/15.final_project/Front/homemaker-FE/node_modules/fbjs/lib/DataTransfer.js"],"sourcesContent":["'use strict';\r\n\r\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\n/**\r\n * Copyright (c) 2013-present, Facebook, Inc.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @typechecks\r\n */\r\n\r\nvar PhotosMimeType = require('./PhotosMimeType');\r\n\r\nvar createArrayFromMixed = require('./createArrayFromMixed');\r\nvar emptyFunction = require('./emptyFunction');\r\n\r\nvar CR_LF_REGEX = new RegExp('\\r\\n', 'g');\r\nvar LF_ONLY = '\\n';\r\n\r\nvar RICH_TEXT_TYPES = {\r\n  'text/rtf': 1,\r\n  'text/html': 1\r\n};\r\n\r\n/**\r\n * If DataTransferItem is a file then return the Blob of data.\r\n *\r\n * @param {object} item\r\n * @return {?blob}\r\n */\r\nfunction getFileFromDataTransfer(item) {\r\n  if (item.kind == 'file') {\r\n    return item.getAsFile();\r\n  }\r\n}\r\n\r\nvar DataTransfer = function () {\r\n  /**\r\n   * @param {object} data\r\n   */\r\n  function DataTransfer(data) {\r\n    _classCallCheck(this, DataTransfer);\r\n\r\n    this.data = data;\r\n\r\n    // Types could be DOMStringList or array\r\n    this.types = data.types ? createArrayFromMixed(data.types) : [];\r\n  }\r\n\r\n  /**\r\n   * Is this likely to be a rich text data transfer?\r\n   *\r\n   * @return {boolean}\r\n   */\r\n\r\n\r\n  DataTransfer.prototype.isRichText = function isRichText() {\r\n    // If HTML is available, treat this data as rich text. This way, we avoid\r\n    // using a pasted image if it is packaged with HTML -- this may occur with\r\n    // pastes from MS Word, for example.  However this is only rich text if\r\n    // there's accompanying text.\r\n    if (this.getHTML() && this.getText()) {\r\n      return true;\r\n    }\r\n\r\n    // When an image is copied from a preview window, you end up with two\r\n    // DataTransferItems one of which is a file's metadata as text.  Skip those.\r\n    if (this.isImage()) {\r\n      return false;\r\n    }\r\n\r\n    return this.types.some(function (type) {\r\n      return RICH_TEXT_TYPES[type];\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Get raw text.\r\n   *\r\n   * @return {?string}\r\n   */\r\n\r\n\r\n  DataTransfer.prototype.getText = function getText() {\r\n    var text;\r\n    if (this.data.getData) {\r\n      if (!this.types.length) {\r\n        text = this.data.getData('Text');\r\n      } else if (this.types.indexOf('text/plain') != -1) {\r\n        text = this.data.getData('text/plain');\r\n      }\r\n    }\r\n    return text ? text.replace(CR_LF_REGEX, LF_ONLY) : null;\r\n  };\r\n\r\n  /**\r\n   * Get HTML paste data\r\n   *\r\n   * @return {?string}\r\n   */\r\n\r\n\r\n  DataTransfer.prototype.getHTML = function getHTML() {\r\n    if (this.data.getData) {\r\n      if (!this.types.length) {\r\n        return this.data.getData('Text');\r\n      } else if (this.types.indexOf('text/html') != -1) {\r\n        return this.data.getData('text/html');\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Is this a link data transfer?\r\n   *\r\n   * @return {boolean}\r\n   */\r\n\r\n\r\n  DataTransfer.prototype.isLink = function isLink() {\r\n    return this.types.some(function (type) {\r\n      return type.indexOf('Url') != -1 || type.indexOf('text/uri-list') != -1 || type.indexOf('text/x-moz-url');\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Get a link url.\r\n   *\r\n   * @return {?string}\r\n   */\r\n\r\n\r\n  DataTransfer.prototype.getLink = function getLink() {\r\n    if (this.data.getData) {\r\n      if (this.types.indexOf('text/x-moz-url') != -1) {\r\n        var url = this.data.getData('text/x-moz-url').split('\\n');\r\n        return url[0];\r\n      }\r\n      return this.types.indexOf('text/uri-list') != -1 ? this.data.getData('text/uri-list') : this.data.getData('url');\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  /**\r\n   * Is this an image data transfer?\r\n   *\r\n   * @return {boolean}\r\n   */\r\n\r\n\r\n  DataTransfer.prototype.isImage = function isImage() {\r\n    var isImage = this.types.some(function (type) {\r\n      // Firefox will have a type of application/x-moz-file for images during\r\n      // dragging\r\n      return type.indexOf('application/x-moz-file') != -1;\r\n    });\r\n\r\n    if (isImage) {\r\n      return true;\r\n    }\r\n\r\n    var items = this.getFiles();\r\n    for (var i = 0; i < items.length; i++) {\r\n      var type = items[i].type;\r\n      if (!PhotosMimeType.isImage(type)) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  DataTransfer.prototype.getCount = function getCount() {\r\n    if (this.data.hasOwnProperty('items')) {\r\n      return this.data.items.length;\r\n    } else if (this.data.hasOwnProperty('mozItemCount')) {\r\n      return this.data.mozItemCount;\r\n    } else if (this.data.files) {\r\n      return this.data.files.length;\r\n    }\r\n    return null;\r\n  };\r\n\r\n  /**\r\n   * Get files.\r\n   *\r\n   * @return {array}\r\n   */\r\n\r\n\r\n  DataTransfer.prototype.getFiles = function getFiles() {\r\n    if (this.data.items) {\r\n      // createArrayFromMixed doesn't properly handle DataTransferItemLists.\r\n      return Array.prototype.slice.call(this.data.items).map(getFileFromDataTransfer).filter(emptyFunction.thatReturnsArgument);\r\n    } else if (this.data.files) {\r\n      return Array.prototype.slice.call(this.data.files);\r\n    } else {\r\n      return [];\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Are there any files to fetch?\r\n   *\r\n   * @return {boolean}\r\n   */\r\n\r\n\r\n  DataTransfer.prototype.hasFiles = function hasFiles() {\r\n    return this.getFiles().length > 0;\r\n  };\r\n\r\n  return DataTransfer;\r\n}();\r\n\r\nmodule.exports = DataTransfer;"],"mappings":"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"},"metadata":{},"sourceType":"script"}